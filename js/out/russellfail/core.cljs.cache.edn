;; Analyzed by ClojureScript 0.0-3058
{:use-macros {reaction reagent.ratom}, :excludes #{}, :name russellfail.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, re-frame.core re-frame.core, goog.events goog.events, e goog.events}, :uses {subscribe re-frame.core, register-sub re-frame.core, trim-v re-frame.core, dispatch re-frame.core, register-handler re-frame.core}, :defs {main {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 20, :end-line 85, :column 16, :line 85, :file "/Users/rsslldnphy/Code/russellfail/src/russellfail/core.cljs"}, :name russellfail.core/main, :variadic false, :file "src/russellfail/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 85, :end-line 85, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, page {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 11, :end-line 69, :column 7, :line 69, :file "/Users/rsslldnphy/Code/russellfail/src/russellfail/core.cljs"}, :name russellfail.core/page, :variadic false, :file "src/russellfail/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag function, :variadic false, :max-fixed-arity 0}), :line 69, :end-line 69, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, div {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 10, :end-line 50, :column 7, :line 50, :file "/Users/rsslldnphy/Code/russellfail/src/russellfail/core.cljs"}, :name russellfail.core/div, :variadic false, :file "src/russellfail/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag function, :variadic false, :max-fixed-arity 0}), :line 50, :end-line 50, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, start-random-timer {:protocol-inline nil, :meta {:arglists (quote ([timeout handler])), :end-column 25, :end-line 44, :column 7, :line 44, :file "/Users/rsslldnphy/Code/russellfail/src/russellfail/core.cljs"}, :name russellfail.core/start-random-timer, :variadic false, :file "src/russellfail/core.cljs", :end-column 25, :method-params ([timeout handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([timeout handler])), :test true}, rand-hex {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 15, :end-line 40, :column 7, :line 40, :file "/Users/rsslldnphy/Code/russellfail/src/russellfail/core.cljs"}, :name russellfail.core/rand-hex, :variadic false, :file "src/russellfail/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, hex-digits {:meta {:end-column 16, :end-line 37, :column 6, :line 37, :file "/Users/rsslldnphy/Code/russellfail/src/russellfail/core.cljs"}, :file "src/russellfail/core.cljs", :line 37, :column 1, :end-line 37, :end-column 16, :test true, :name russellfail.core/hex-digits}}, :require-macros {reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:order [:window-area/update :window-height :window-width :block-size :window-area :component-did-mount :component-will-unmount :reagent-render :div.block :style :width :height :background-color :div#russellfail :div :key], :seen #{:block-size :window-area :key :div#russellfail :component-did-mount :background-color :width :style :div :window-area/update :reagent-render :window-height :component-will-unmount :div.block :height :window-width}}, :doc nil}