;; Analyzed by ClojureScript 0.0-3058
{:use-macros {reaction reagent.ratom}, :excludes #{}, :name re-frame.undo, :imports nil, :requires {subs re-frame.subs, re-frame.subs re-frame.subs, handlers re-frame.handlers, re-frame.handlers re-frame.handlers, re-frame.db re-frame.db, reagent reagent.core, reagent.core reagent.core, re-frame.utils re-frame.utils}, :uses {app-db re-frame.db, warn re-frame.utils}, :defs {undo-n {:protocol-inline nil, :meta {:arglists (quote ([n])), :doc "undo until we reach n or run out of undos", :private true, :end-column 14, :end-line 106, :column 8, :line 106, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :private true, :name re-frame.undo/undo-n, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 14, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :doc "undo until we reach n or run out of undos", :test true}, app-explain {:meta {:private true, :end-column 27, :end-line 30, :column 16, :line 30, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :file "resources/public/js/out/re_frame/undo.cljs", :line 30, :column 1, :end-line 30, :end-column 27, :private true, :test true, :name re-frame.undo/app-explain}, redos? {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 13, :end-line 60, :column 7, :line 60, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :name re-frame.undo/redos?, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 0}), :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, undo-explain-list {:meta {:private true, :end-column 33, :end-line 31, :column 16, :line 31, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :file "resources/public/js/out/re_frame/undo.cljs", :line 31, :column 1, :end-line 31, :end-column 33, :private true, :test true, :name re-frame.undo/undo-explain-list}, redo {:protocol-inline nil, :meta {:arglists (quote ([undos cur redos])), :private true, :end-column 12, :end-line 123, :column 8, :line 123, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :private true, :name re-frame.undo/redo, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 12, :method-params ([undos cur redos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 3}), :line 123, :end-line 123, :max-fixed-arity 3, :fn-var true, :arglists (quote ([undos cur redos])), :test true}, store-now! {:protocol-inline nil, :meta {:arglists (quote ([explanation])), :doc "stores the value currently in app-db, so the user can later undo", :end-column 17, :end-line 43, :column 7, :line 43, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :name re-frame.undo/store-now!, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 17, :method-params ([explanation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([explanation])), :doc "stores the value currently in app-db, so the user can later undo", :test true}, redo-explain-list {:meta {:private true, :end-column 33, :end-line 32, :column 16, :line 32, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :file "resources/public/js/out/re_frame/undo.cljs", :line 32, :column 1, :end-line 32, :end-column 33, :private true, :test true, :name re-frame.undo/redo-explain-list}, redo-list {:meta {:private true, :end-column 25, :end-line 22, :column 16, :line 22, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :file "resources/public/js/out/re_frame/undo.cljs", :line 22, :column 1, :end-line 22, :end-column 25, :private true, :test true, :name re-frame.undo/redo-list}, redo-n {:protocol-inline nil, :meta {:arglists (quote ([n])), :doc "redo until we reach n or run out of redos", :private true, :end-column 14, :end-line 131, :column 8, :line 131, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :private true, :name re-frame.undo/redo-n, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 14, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :doc "redo until we reach n or run out of redos", :test true}, undo {:protocol-inline nil, :meta {:arglists (quote ([undos cur redos])), :private true, :end-column 12, :end-line 98, :column 8, :line 98, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :private true, :name re-frame.undo/undo, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 12, :method-params ([undos cur redos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 3}), :line 98, :end-line 98, :max-fixed-arity 3, :fn-var true, :arglists (quote ([undos cur redos])), :test true}, set-max-undos! {:protocol-inline nil, :meta {:arglists (quote ([n])), :end-column 21, :end-line 16, :column 7, :line 16, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :name re-frame.undo/set-max-undos!, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 21, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :test true}, max-undos {:meta {:private true, :end-column 25, :end-line 15, :column 16, :line 15, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :file "resources/public/js/out/re_frame/undo.cljs", :line 15, :column 1, :end-line 15, :end-column 25, :private true, :test true, :name re-frame.undo/max-undos}, undo-list {:meta {:private true, :end-column 25, :end-line 21, :column 16, :line 21, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :file "resources/public/js/out/re_frame/undo.cljs", :line 21, :column 1, :end-line 21, :end-column 25, :private true, :test true, :name re-frame.undo/undo-list}, clear-history! {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 21, :end-line 35, :column 7, :line 35, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :name re-frame.undo/clear-history!, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, undos? {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 13, :end-line 56, :column 7, :line 56, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/undo.cljs"}, :name re-frame.undo/undos?, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 0}), :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros {reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:order [:undos? :redos? :undo-explanations :redo-explanations :undo :redo], :seen #{:redo :undo :undos? :undo-explanations :redo-explanations :redos?}}, :doc nil}