;; Analyzed by ClojureScript 0.0-3058
{:defs {first-in-vector {:protocol-inline nil, :meta {:arglists (quote ([v])), :end-column 22, :end-line 25, :column 7, :line 25, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/utils.cljs"}, :name re-frame.utils/first-in-vector, :variadic false, :file "resources/public/js/out/re_frame/utils.cljs", :end-column 22, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, groupEnd {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 15, :end-line 21, :column 7, :line 21, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/utils.cljs"}, :name re-frame.utils/groupEnd, :variadic false, :file "resources/public/js/out/re_frame/utils.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, group {:protocol-inline nil, :meta {:arglists (quote ([& args])), :end-column 12, :end-line 17, :column 7, :line 17, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/utils.cljs"}, :name re-frame.utils/group, :variadic true, :file "resources/public/js/out/re_frame/utils.cljs", :end-column 12, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic true, :max-fixed-arity 0}), :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& args])), :test true}, log {:protocol-inline nil, :meta {:arglists (quote ([& args])), :end-column 10, :end-line 13, :column 7, :line 13, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/utils.cljs"}, :name re-frame.utils/log, :variadic true, :file "resources/public/js/out/re_frame/utils.cljs", :end-column 10, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic true, :max-fixed-arity 0}), :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& args])), :test true}, dbg {:protocol-inline nil, :meta {:arglists (quote ([& args])), :end-column 10, :end-line 9, :column 7, :line 9, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/utils.cljs"}, :name re-frame.utils/dbg, :variadic true, :file "resources/public/js/out/re_frame/utils.cljs", :end-column 10, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic true, :max-fixed-arity 0}), :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& args])), :test true}, warn {:protocol-inline nil, :meta {:arglists (quote ([& args])), :end-column 11, :end-line 5, :column 7, :line 5, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/utils.cljs"}, :name re-frame.utils/warn, :variadic true, :file "resources/public/js/out/re_frame/utils.cljs", :end-column 11, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic true, :max-fixed-arity 0}), :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& args])), :test true}}, :imports nil, :requires nil, :uses nil, :require-macros nil, :use-macros nil, :excludes #{}, :doc nil, :name re-frame.utils}