;; Analyzed by ClojureScript 0.0-3058
{:defs {subscribe {:protocol-inline nil, :meta {:arglists (quote ([v])), :doc "returns a reagent/reaction which observes a part of app-db", :end-column 16, :end-line 20, :column 7, :line 20, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/subs.cljs"}, :name re-frame.subs/subscribe, :variadic false, :file "resources/public/js/out/re_frame/subs.cljs", :end-column 16, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "returns a reagent/reaction which observes a part of app-db", :test true}, register {:protocol-inline nil, :meta {:arglists (quote ([key-v handler-fn])), :doc "register a hander function for an id", :end-column 15, :end-line 12, :column 7, :line 12, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/subs.cljs"}, :name re-frame.subs/register, :variadic false, :file "resources/public/js/out/re_frame/subs.cljs", :end-column 15, :method-params ([key-v handler-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key-v handler-fn])), :doc "register a hander function for an id", :test true}, key->fn {:meta {:private true, :end-column 23, :end-line 9, :column 16, :line 9, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/subs.cljs"}, :file "resources/public/js/out/re_frame/subs.cljs", :line 9, :column 1, :end-line 9, :end-column 23, :private true, :test true, :name re-frame.subs/key->fn}}, :imports nil, :requires {re-frame.utils re-frame.utils, re-frame.db re-frame.db}, :uses {app-db re-frame.db, warn re-frame.utils, first-in-vector re-frame.utils}, :require-macros nil, :use-macros nil, :excludes #{}, :doc nil, :name re-frame.subs}