;; Analyzed by ClojureScript 0.0-3058
{:defs {pure {:meta {:end-column 10, :end-line 20, :column 6, :line 20, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/core.cljs"}, :file "resources/public/js/out/re_frame/core.cljs", :line 20, :column 1, :end-line 20, :end-column 10, :test true, :name re-frame.core/pure}, enrich {:meta {:end-column 12, :end-line 24, :column 6, :line 24, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/core.cljs"}, :file "resources/public/js/out/re_frame/core.cljs", :line 24, :column 1, :end-line 24, :end-column 12, :test true, :name re-frame.core/enrich}, subscribe {:meta {:end-column 15, :end-line 16, :column 6, :line 16, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/core.cljs"}, :file "resources/public/js/out/re_frame/core.cljs", :line 16, :column 1, :end-line 16, :end-column 15, :test true, :name re-frame.core/subscribe}, register-sub {:meta {:end-column 18, :end-line 15, :column 6, :line 15, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/core.cljs"}, :file "resources/public/js/out/re_frame/core.cljs", :line 15, :column 1, :end-line 15, :end-column 18, :test true, :name re-frame.core/register-sub}, path {:meta {:end-column 10, :end-line 23, :column 6, :line 23, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/core.cljs"}, :file "resources/public/js/out/re_frame/core.cljs", :line 23, :column 1, :end-line 23, :end-column 10, :test true, :name re-frame.core/path}, dispatch-sync {:meta {:end-column 19, :end-line 13, :column 6, :line 13, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/core.cljs"}, :file "resources/public/js/out/re_frame/core.cljs", :line 13, :column 1, :end-line 13, :end-column 19, :test true, :name re-frame.core/dispatch-sync}, undoable {:meta {:end-column 14, :end-line 22, :column 6, :line 22, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/core.cljs"}, :file "resources/public/js/out/re_frame/core.cljs", :line 22, :column 1, :end-line 22, :end-column 14, :test true, :name re-frame.core/undoable}, debug {:meta {:end-column 11, :end-line 21, :column 6, :line 21, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/core.cljs"}, :file "resources/public/js/out/re_frame/core.cljs", :line 21, :column 1, :end-line 21, :end-column 11, :test true, :name re-frame.core/debug}, trim-v {:meta {:end-column 12, :end-line 25, :column 6, :line 25, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/core.cljs"}, :file "resources/public/js/out/re_frame/core.cljs", :line 25, :column 1, :end-line 25, :end-column 12, :test true, :name re-frame.core/trim-v}, dispatch {:meta {:end-column 14, :end-line 12, :column 6, :line 12, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/core.cljs"}, :file "resources/public/js/out/re_frame/core.cljs", :line 12, :column 1, :end-line 12, :end-column 14, :test true, :name re-frame.core/dispatch}, after {:meta {:end-column 11, :end-line 26, :column 6, :line 26, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/core.cljs"}, :file "resources/public/js/out/re_frame/core.cljs", :line 26, :column 1, :end-line 26, :end-column 11, :test true, :name re-frame.core/after}, register-handler {:protocol-inline nil, :meta {:arglists (quote ([id handler] [id middleware handler])), :end-column 23, :end-line 35, :column 7, :line 35, :file "/Users/rsslldnphy/Code/russellfail/resources/public/js/out/re_frame/core.cljs"}, :name re-frame.core/register-handler, :variadic false, :file "resources/public/js/out/re_frame/core.cljs", :end-column 23, :method-params ([id handler] [id middleware handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2} {:tag #{nil any}, :variadic false, :max-fixed-arity 3}), :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists (quote ([id handler] [id middleware handler])), :test true}}, :imports nil, :requires {middleware re-frame.middleware, re-frame.middleware re-frame.middleware, router re-frame.router, re-frame.router re-frame.router, subs re-frame.subs, re-frame.subs re-frame.subs, re-frame.handlers re-frame.handlers, handlers re-frame.handlers}, :uses nil, :require-macros nil, :use-macros nil, :excludes #{}, :doc nil, :name re-frame.core}